{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i4 from \"../registroMedico.service\";\nimport * as i5 from \"@angular/common\";\nfunction RegistroMedicoCreateComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Id requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistroMedicoCreateComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" La identificacion es invalida \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistroMedicoCreateComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Fecha de expedicion requerida \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistroMedicoCreateComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n}\nfunction RegistroMedicoCreateComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Imagen del registro medico requerida \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DatepickerOverviewExample {}\nexport let RegistroMedicoCreateComponent = /*#__PURE__*/(() => {\n  class RegistroMedicoCreateComponent {\n    constructor(formBuilder, toastr, calendar, registroService) {\n      this.formBuilder = formBuilder;\n      this.toastr = toastr;\n      this.calendar = calendar;\n      this.registroService = registroService;\n      this.newItemEvent = new EventEmitter();\n    }\n    addNewItem(value) {\n      this.newItemEvent.emit(value);\n    }\n    selectToday() {\n      this.model = this.calendar.getToday();\n    }\n    ngOnInit() {\n      this.registroForm = this.formBuilder.group({\n        identificacion: [\"\", [Validators.required, Validators.minLength(2)]],\n        fechaExpedicion: [\"\", [Validators.required]],\n        imagen: [\"\", [Validators.required]]\n      });\n    }\n    createRegistroMedico(newRegistro) {\n      // Process checkout data here\n      console.warn(\"el registro medico fue creado\", newRegistro);\n      this.registroService.createRegistroMedico(newRegistro).subscribe(calif => {\n        this.toastr.success(calif.identificacion);\n        this.addNewItem(calif.id);\n        this.registroForm.reset();\n      });\n      this.registroForm.reset();\n    }\n    cancelCreation() {\n      console.log(\"Cancelando ...\");\n      this.registroForm.reset();\n    }\n    static #_ = this.ɵfac = function RegistroMedicoCreateComponent_Factory(t) {\n      return new (t || RegistroMedicoCreateComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.NgbCalendar), i0.ɵɵdirectiveInject(i4.RegistroMedicoService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegistroMedicoCreateComponent,\n      selectors: [[\"app-registroMedico-create\"]],\n      outputs: {\n        newItemEvent: \"newItemEvent\"\n      },\n      decls: 30,\n      vars: 7,\n      consts: [[1, \"container-fluid\"], [1, \"col-4\", \"p-3\"], [1, \"h4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mx-sm-3\", \"mb-2\"], [\"for\", \"identificacion\"], [\"novalidate\", \"\", \"id\", \"identificacion\", \"formControlName\", \"identificacion\", \"placeholder\", \"El id del registro\", 1, \"form-control\"], [\"class\", \"alert alert-danger alert-dismissible fade show\", 4, \"ngIf\"], [\"for\", \"fechaExpedicion\"], [\"id\", \"fechaExpedicion\", \"type\", \"date\", \"formControlName\", \"fechaExpedicion\", \"placeholder\", \"La fecha de expedicion del registro medico\", 1, \"form-control\"], [\"for\", \"imagen\"], [\"id\", \"imagen\", \"type\", \"text\", \"formControlName\", \"imagen\", \"placeholder\", \"La imagen del registro medico\", 1, \"form-control\"], [1, \"row\", \"m-3\", \"small\"], [1, \"row\", \"m-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"ml-3\", 3, \"click\"], [1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\"]],\n      template: function RegistroMedicoCreateComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵtext(3, \"Creacion del registro m\\u00E9dico\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function RegistroMedicoCreateComponent_Template_form_ngSubmit_4_listener() {\n            return !ctx.registroForm.invalid && ctx.createRegistroMedico(ctx.registroForm.value);\n          });\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \" Identificacion* \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 6);\n          i0.ɵɵtemplate(9, RegistroMedicoCreateComponent_div_9_Template, 2, 0, \"div\", 7)(10, RegistroMedicoCreateComponent_div_10_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 8);\n          i0.ɵɵtext(13, \" Fecha de Expedicion* \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 9);\n          i0.ɵɵtemplate(15, RegistroMedicoCreateComponent_div_15_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\", 10);\n          i0.ɵɵtext(18, \" Imagen \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 11);\n          i0.ɵɵtemplate(20, RegistroMedicoCreateComponent_div_20_Template, 1, 0, \"div\", 7)(21, RegistroMedicoCreateComponent_div_21_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\", 12)(23, \"p\");\n          i0.ɵɵtext(24, \"* Required fields\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"div\", 13)(26, \"button\", 14);\n          i0.ɵɵtext(27, \" Create \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function RegistroMedicoCreateComponent_Template_button_click_28_listener() {\n            return ctx.cancelCreation();\n          });\n          i0.ɵɵtext(29, \" Cancel \");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formGroup\", ctx.registroForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.registroForm.get(\"identificacion\").hasError(\"required\") && ctx.registroForm.get(\"identificacion\").touched);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.registroForm.get(\"identificacion\").hasError(\"minlength\") && ctx.registroForm.get(\"identificacion\").touched);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.registroForm.get(\"fechaExpedicion\").hasError(\"required\") && ctx.registroForm.get(\"fechaExpedicion\").touched);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.registroForm.get(\"imagen\").hasError(\"required\") && ctx.registroForm.get(\"imagen\").touched);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.registroForm.get(\"imagen\").touched && ctx.registroForm.get(\"imagen\").hasError(\"imagen\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", !ctx.registroForm.valid);\n        }\n      },\n      dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n    });\n  }\n  return RegistroMedicoCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}