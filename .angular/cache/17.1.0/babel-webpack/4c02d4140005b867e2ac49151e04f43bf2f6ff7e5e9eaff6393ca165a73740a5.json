{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../cita.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../cita-detail/cita-detail.component\";\nfunction CitaListarComponent_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const d_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.days[d_r3.getDay()], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", d_r3.getDate(), \"-\", ctx_r0.months[d_r3.getMonth()].toLowerCase().substring(0, 3), \"\");\n  }\n}\nfunction CitaListarComponent_tr_8_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 6)(1, \"a\", 7);\n    i0.ɵɵlistener(\"click\", function CitaListarComponent_tr_8_td_3_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const d_r6 = restoredCtx.$implicit;\n      const h_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onSelected(ctx_r7.citaInTime(d_r6, h_r4)));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const d_r6 = ctx.$implicit;\n    const h_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.classOfCell(d_r6, h_r4));\n    i0.ɵɵattribute(\"rowspan\", ctx_r5.citaInTime(d_r6, h_r4) ? ctx_r5.numHours(ctx_r5.citaInTime(d_r6, h_r4)) : 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.textOfCell(d_r6, h_r4), \" \");\n  }\n}\nfunction CitaListarComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, CitaListarComponent_tr_8_td_3_Template, 3, 3, \"td\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const h_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", h_r4 % 12 ? h_r4 % 12 : 12, \" \", h_r4 >= 12 ? \"p.m.\" : \"a.m.\", \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.weekNotInBetween(h_r4));\n  }\n}\nfunction CitaListarComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-cita-detail\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"citaDetail\", ctx_r2.selectedCita);\n  }\n}\nexport let CitaListarComponent = /*#__PURE__*/(() => {\n  class CitaListarComponent {\n    constructor(citaService) {\n      this.citaService = citaService;\n      this.currentWeek = [];\n      this.days = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];\n      this.months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n      this.selected = false;\n      /*getCitas(): void {\n        this.citaService.getCitas().subscribe(citas => {\n          let i = 0;\n          while (i < citas.length) {\n            citas[i].fecha = new Date(citas[i].fecha);\n            i++;\n          }\n          this.citas = citas;\n        });\n      }*/\n      this.addDays = (from, days = 1) => new Date(from.getTime() + days * 1000 * 60 * 60 * 24);\n      this.range = (start, end) => Array.from(Array(end - start + 1).keys()).map(x => x + start);\n      this.numHours = c => Math.floor(c.duracion / 60);\n    }\n    citaInTime(dt, h) {\n      dt.setHours(h, 0, 0, 0);\n      for (let c of this.citas) {\n        if (c.fecha.getTime() == dt.getTime()) {\n          return c;\n        }\n      }\n      return null;\n    }\n    citaInBetween(dt, h) {\n      /*Informa si está entre una cita, pero no si es una cita!*/\n      dt.setHours(h, 0, 0, 0);\n      for (let c of this.citas) {\n        let from = c.fecha;\n        let to = new Date(from.getTime() + c.duracion * 1000 * 60);\n        if (from.getTime() < dt.getTime() && to.getTime() > dt.getTime()) {\n          return false;\n        }\n      }\n      return true;\n    }\n    weekNotInBetween(h) {\n      let subweek = [];\n      for (let d of this.currentWeek) {\n        if (this.citaInBetween(d, h)) {\n          subweek.push(d);\n        }\n      }\n      return subweek;\n    }\n    inCurrent(d) {\n      d.setHours(0, 0, 0, 0);\n      return d >= this.currentDate && d < this.addDays(this.currentDate);\n    }\n    classOfCell(d, h) {\n      let c = this.citaInTime(d, h);\n      let cls = '';\n      if (c) {\n        cls += 'bordercell';\n        cls += c.disponible ? ' disponible' : ' reservado';\n      } else {\n        cls += 'lrbordercell';\n        cls += this.inCurrent(d) ? ' todaycol' : '';\n      }\n      return cls;\n    }\n    textOfCell(d, h) {\n      let c = this.citaInTime(d, h);\n      let txt = '';\n      if (c) {\n        txt = c.disponible ? 'Disponible' : 'Reservado';\n      }\n      return txt;\n    }\n    ngOnInit() {\n      let citas = this.citas;\n      let i = 0;\n      while (i < citas.length) {\n        citas[i].fecha = new Date(citas[i].fecha);\n        i++;\n      }\n      this.citas = citas;\n      this.currentDate = new Date();\n      this.currentDate.setHours(0, 0, 0, 0);\n      while (this.currentWeek.length < 6) {\n        this.currentWeek.push(this.addDays(this.currentDate, this.currentWeek.length + 1 - this.currentDate.getDay()));\n      }\n    }\n    onSelected(c) {\n      this.selected = true;\n      this.selectedCita = c;\n    }\n    static #_ = this.ɵfac = function CitaListarComponent_Factory(t) {\n      return new (t || CitaListarComponent)(i0.ɵɵdirectiveInject(i1.CitaService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CitaListarComponent,\n      selectors: [[\"app-cita-listar\"]],\n      inputs: {\n        citas: \"citas\"\n      },\n      decls: 10,\n      vars: 3,\n      consts: [[1, \"cal\"], [\"class\", \"bordercell\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"bordercell\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [3, \"click\"], [3, \"citaDetail\"]],\n      template: function CitaListarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h1\");\n          i0.ɵɵtext(1, \"Agenda \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\");\n          i0.ɵɵelement(5, \"th\");\n          i0.ɵɵtemplate(6, CitaListarComponent_th_6_Template, 4, 3, \"th\", 1);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"tbody\");\n          i0.ɵɵtemplate(8, CitaListarComponent_tr_8_Template, 4, 3, \"tr\", 2);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(9, CitaListarComponent_div_9_Template, 2, 1, \"div\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.currentWeek);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.range(6, 20));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selected);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.CitaDetailComponent],\n      styles: [\"table[_ngcontent-%COMP%]{width:100%;table-layout:fixed;border:1px solid black}h1[_ngcontent-%COMP%]{text-align:center}.bordercell[_ngcontent-%COMP%]{text-align:center;border:.5px solid black}.lrbordercell[_ngcontent-%COMP%]{text-align:center;border-left:.5px solid black;border-right:.5px solid black}.todaycol[_ngcontent-%COMP%]{background-color:#f4e6f7}.lowcolor[_ngcontent-%COMP%]{font-weight:400;color:gray}.emphasis[_ngcontent-%COMP%]{font-weight:700;font-size:large;color:#000}.disponible[_ngcontent-%COMP%]{background-color:#b5f0f4;cursor:pointer;color:#000;text-align:center}.reservado[_ngcontent-%COMP%]{background-color:#f4bcb5;cursor:pointer;color:#000;text-align:center}\"]\n    });\n  }\n  return CitaListarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}